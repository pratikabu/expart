/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Transaction.java
 *
 * Created on May 29, 2010, 2:40:10 PM
 */

package com.pratikabu.expart.boundary;

import com.gmail.pratikabu.pls.components.ContentInfo;
import com.gmail.pratikabu.pls.components.TableInfo;
import com.gmail.pratikabu.pls.controller.ContentRegistryServer;
import com.gmail.pratikabu.pls.controller.TransactionHandler;
import com.gmail.pratikabu.pls.exceptions.FieldNameNotFoundException;
import com.pratikabu.expart.components.UsefulMethods;
import javax.swing.JOptionPane;

/**
 *
 * @author Blue
 */
public class UserEntry extends javax.swing.JDialog {

    private int uid=-1;

    private ContentInfo ci;

    /** Creates new form Transaction */
    private UserEntry(java.awt.Frame parent, int tid) {
        super(parent, true);
        initComponents();

        renderTransaction(tid);

        setLocationRelativeTo(null);
        setVisible(true);
    }

    public static int showVoucher(java.awt.Frame parent, int tid){
        return new UserEntry(parent, tid).uid;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("User Entry");

        jLabel4.setText("Name:");

        jButton2.setMnemonic('C');
        jButton2.setText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 11));
        jButton3.setMnemonic('S');
        jButton3.setText("Save");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if(ensureCorrect())
            save();
    }//GEN-LAST:event_jButton3ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private void renderTransaction(int uid) {
        this.uid=uid;
        if (uid == -1) {
            ci=ContentRegistryServer.getContentInfo(new TableInfo("User", null), null);
        } else {
            try {
//                ci=ContentRegistryServer.getContentInfo(new TableInfo("Transaction", null), tid);
//                updateDate((Date)ci.getFieldValue("tDate"));
//
//                previousInAcc=(Integer)ci.getFieldValue("tLLedger");
//                renderInAccount(previousInAcc);
//
//                previousOutAcc=(Integer)ci.getFieldValue("tRLedger");
//                renderOutAccount(previousOutAcc);
//
//                previousAmount=(Double)ci.getFieldValue("tAmount");
//                ((CurrencyTextField)jTextField3).setAmount(previousAmount);
//                jTextArea1.setText((String)ci.getFieldValue("tNarration"));
            } catch (Exception e) {
            }
        }
    }
    
    private boolean ensureCorrect(){
        boolean correct = !jTextField1.getText().trim().isEmpty();
        String msgs="";
        if(!correct)
            msgs="Name could not be empty.";

        if (!correct) {

            JOptionPane.showMessageDialog(this, msgs
                    , "Eh", JOptionPane.ERROR_MESSAGE);
        }else{//confirm here
            int choice=JOptionPane.showConfirmDialog(this, "Now Saving. Are you sure?", "Saving", JOptionPane.YES_NO_OPTION);
            correct=choice==JOptionPane.YES_OPTION;
        }

        return correct;
    }

    private boolean save() {
        boolean saved=false;

        //create a transaction, add all transactions to this object and finally execute it.. :)
        TransactionHandler th=new TransactionHandler();
        
        try{
            ci.setFieldValue("uName", jTextField1.getText());

            th.addQuery(ci.getTransaction());//add trans

            saved=th.executeQuery();//execute transactions at once
            if(saved){
//                JOptionPane.showMessageDialog(this, "Saved Successfully.");
                this.dispose();
            }
        }catch(FieldNameNotFoundException e){
            e.printStackTrace();
        }

        if(!saved)
            JOptionPane.showMessageDialog(this, "Error Saving Data.\n\n", "Error", JOptionPane.ERROR_MESSAGE);

        return saved;
    }
}
